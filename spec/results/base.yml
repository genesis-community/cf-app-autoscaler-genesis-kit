addons:
- jobs:
  - name: bosh-dns-aliases
    properties:
      aliases:
      - domain: autoscalerpostgres.service.cf.internal
        targets:
        - deployment: base-cf-app-autoscaler
          domain: bosh
          instance_group: postgres
          network: test-core-network
          query: '*'
      - domain: autoscaler.service.cf.internal
        targets:
        - deployment: base-cf-app-autoscaler
          domain: bosh
          instance_group: apiserver
          network: test-core-network
          query: '*'
      - domain: autoscalerscheduler.service.cf.internal
        targets:
        - deployment: base-cf-app-autoscaler
          domain: bosh
          instance_group: scheduler
          network: test-core-network
          query: '*'
      - domain: servicebroker.service.cf.internal
        targets:
        - deployment: base-cf-app-autoscaler
          domain: bosh
          instance_group: apiserver
          network: test-core-network
          query: '*'
      - domain: eventgenerator.service.cf.internal
        targets:
        - deployment: base-cf-app-autoscaler
          domain: bosh
          instance_group: eventgenerator
          network: test-core-network
          query: '*'
      - domain: scalingengine.service.cf.internal
        targets:
        - deployment: base-cf-app-autoscaler
          domain: bosh
          instance_group: scalingengine
          network: test-core-network
          query: '*'
      - domain: nats.service.cf.internal
        targets:
        - deployment: base-test-cf
          domain: bosh
          instance_group: nats
          network: test-core-network
          query: '*'
      - domain: reverse-log-proxy.service.cf.internal
        targets:
        - deployment: base-test-cf
          domain: bosh
          instance_group: log-api
          network: test-core-network
          query: '*'
      - domain: _.nats.service.cf.internal
        targets:
        - deployment: base-test-cf
          domain: bosh
          instance_group: nats
          network: test-core-network
          query: _
      - domain: logcache
        targets:
        - deployment: base-test-cf
          domain: bosh
          instance_group: log-cache
          network: test-core-network
          query: '*'
      - domain: log-cache.service.cf.internal
        targets:
        - deployment: base-test-cf
          domain: bosh
          instance_group: log-cache
          network: test-core-network
          query: '*'
    release: bosh-dns-aliases
  name: bosh-dns-aliases
- jobs:
  - name: bpm
    release: bpm
  name: bpm
domains:
  api: base-cf-app-autoscaler.apiserver.service.cf.internal
  eventgenerator: base-cf-app-autoscaler.eventgenerator.service.cf.internal
  postgres: base-cf-app-autoscaler.autoscalerpostgres.service.cf.internal
  scalingengine: base-cf-app-autoscaler.scalingengine.service.cf.internal
  scheduler: base-cf-app-autoscaler.autoscalerscheduler.service.cf.internal
  servicebroker: base-cf-app-autoscaler.servicebroker.service.cf.internal
exodus:
  app-autoscaler-release-date: 2024-Jul-17 12:05:53 UTC
  app-autoscaler-release-version: 14.1.0
  autoscaler_api_domain: autoscaler.sys.test.cf.domain
  autoscaler_metrics_domain: autoscalermetrics.sys.test.cf.domain
  bosh: base
  cf_deployment_env: base-test
  cf_deployment_type: cf
  features: ""
  is_director: false
  service_broker_domain: autoscalerservicebroker.sys.test.cf.domain
  service_broker_password: <!{credhub}:autoscaler_service_broker_password!>
  service_broker_username: autoscaler_service_broker_user
  use_create_env: false
features:
  use_dns_addresses: true
instance_groups:
- azs:
  - z1
  instances: 1
  jobs:
  - name: postgres
    properties:
      databases:
        address: autoscalerpostgres.service.cf.internal
        connection_config:
          connection_max_lifetime: 60s
          max_idle_connections: 10
          max_open_connections: 100
        databases:
        - name: autoscaler
          tag: default
        db_scheme: postgres
        port: 5432
        roles:
        - name: postgres
          password: <!{credhub}:database_password!>
          tag: default
        sslmode: verify-full
        tls:
          ca: <!{credhub}:postgres_ca.ca!>
          certificate: <!{credhub}:postgres_server.certificate!>
          private_key: <!{credhub}:postgres_server.private_key!>
    release: postgres
  migrated_from:
  - name: postgres_autoscaler
  name: postgres
  networks:
  - name: test-core-network
  persistent_disk_type: 10GB
  stemcell: default
  update:
    serial: true
  vm_type: small
- azs:
  - z1
  instances: 1
  jobs:
  - name: scalingengine
    properties:
      autoscaler:
        cf:
          api: https://api.sys.test.cf.domain
          client_id: app-autoscaler-client
          grant_type: client_credentials
          secret: app-autoscaler-secret
          skip_ssl_validation: "true"
        policy_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
        policy_db_connection_config:
          connection_max_lifetime: 60s
          max_idle_connections: 10
          max_open_connections: 100
        scalingengine:
          ca_cert: <!{credhub}:app_autoscaler_ca_cert.ca!>
          health:
            password: <!{credhub}:autoscaler_scalingengine_health_password!>
            port: 6204
            username: scalingengine
          logging:
            level: info
          server_cert: <!{credhub}:scalingengine_server_cert.certificate!>
          server_key: <!{credhub}:scalingengine_server_cert.private_key!>
        scalingengine_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
        scalingengine_db_connection_config:
          connection_max_lifetime: 60s
          max_idle_connections: 10
          max_open_connections: 100
        scheduler_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
        scheduler_db_connection_config:
          connection_max_lifetime: 60s
          max_idle_connections: 10
          max_open_connections: 100
    release: app-autoscaler
  - consumes:
      nats-tls:
        deployment: base-test-cf
        from: nats-tls
    name: route_registrar
    properties:
      nats:
        tls:
          client_cert: <!{credhub}:nats_client_cert.certificate!>
          client_key: <!{credhub}:nats_client_cert.private_key!>
          enabled: true
      route_registrar:
        routes:
        - name: autoscaler_scalingengine_health
          port: 6204
          registration_interval: 20s
          tags:
            component: autoscaler_scalingengine_health
          uris:
          - app-autoscaler-scalingengine.sys.test.cf.domain
    release: routing
  name: scalingengine
  networks:
  - name: test-core-network
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  instances: 1
  jobs:
  - name: golangapiserver
    properties:
      autoscaler:
        apiserver:
          broker:
            broker_credentials:
            - broker_password: <!{credhub}:autoscaler_service_broker_password!>
              broker_username: autoscaler_service_broker_user
            server:
              catalog:
                services:
                - bindable: true
                  bindings_retrievable: true
                  description: Automatically increase or decrease the number of application
                    instances based on a policy you define.
                  id: autoscaler-guid
                  instances_retrievable: true
                  name: app-autoscaler
                  plans:
                  - description: This is the free service plan for the Auto-Scaling
                      service.
                    id: autoscaler-free-plan-id
                    name: autoscaler-free-plan
                  tags:
                  - app-autoscaler
              dashboard_redirect_uri: ""
              port: 6102
          event_generator:
            ca_cert: <!{credhub}:eventgenerator_client_cert.ca!>
            client_cert: <!{credhub}:eventgenerator_client_cert.certificate!>
            client_key: <!{credhub}:eventgenerator_client_cert.private_key!>
            host: eventgenerator.service.cf.internal
          metrics_forwarder:
            host: autoscalermetrics.sys.test.cf.domain
            mtls_host: autoscaler-metricsforwarder-mtls.sys.test.cf.domain
          public_api:
            server:
              port: 6101
          scaling_engine:
            ca_cert: <!{credhub}:scalingengine_client_cert.ca!>
            client_cert: <!{credhub}:scalingengine_client_cert.certificate!>
            client_key: <!{credhub}:scalingengine_client_cert.private_key!>
            host: scalingengine.service.cf.internal
          scheduler:
            ca_cert: <!{credhub}:scheduler_client_cert.ca!>
            client_cert: <!{credhub}:scheduler_client_cert.certificate!>
            client_key: <!{credhub}:scheduler_client_cert.private_key!>
            host: autoscalerscheduler.service.cf.internal
          use_buildin_mode: false
        binding_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
        cf:
          api: https://api.sys.test.cf.domain
          client_id: app-autoscaler-client
          grant_type: client_credentials
          secret: app-autoscaler-secret
          skip_ssl_validation: "true"
        policy_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
        policy_db_connection_config:
          connection_max_lifetime: 60s
          max_idle_connections: 10
          max_open_connections: 100
    release: app-autoscaler
  - consumes:
      nats-tls:
        deployment: base-test-cf
        from: nats-tls
    name: route_registrar
    properties:
      nats:
        tls:
          client_cert: <!{credhub}:nats_client_cert.certificate!>
          client_key: <!{credhub}:nats_client_cert.private_key!>
          enabled: true
      route_registrar:
        routes:
        - name: api_server
          port: 6101
          registration_interval: 20s
          tags:
            component: api_server
          uris:
          - autoscaler.sys.test.cf.domain
        - name: autoscaler_service_broker
          port: 6102
          registration_interval: 20s
          tags:
            component: autoscaler_service_broker
          uris:
          - autoscalerservicebroker.sys.test.cf.domain
    release: routing
  name: apiserver
  networks:
  - name: test-core-network
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  instances: 1
  jobs:
  - name: scheduler
    properties:
      autoscaler:
        policy_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
        scheduler:
          ca_cert: <!{credhub}:scheduler_server_cert.ca!>
          health:
            basicAuthEnabled: true
            password: <!{credhub}:autoscaler_scheduler_health_password!>
            port: 6202
            username: scheduler
          job_reschedule_interval_millisecond: 10000
          job_reschedule_maxcount: 6
          notification_reschedule_maxcount: 3
          scaling_engine:
            ca_cert: <!{credhub}:scalingengine_client_cert.ca!>
            client_cert: <!{credhub}:scalingengine_client_cert.certificate!>
            client_key: <!{credhub}:scalingengine_client_cert.private_key!>
            host: scalingengine.service.cf.internal
          server_cert: <!{credhub}:scheduler_server_cert.certificate!>
          server_key: <!{credhub}:scheduler_server_cert.private_key!>
        scheduler_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
    release: app-autoscaler
  - consumes:
      nats-tls:
        deployment: base-test-cf
        from: nats-tls
    name: route_registrar
    properties:
      nats:
        tls:
          client_cert: <!{credhub}:nats_client_cert.certificate!>
          client_key: <!{credhub}:nats_client_cert.private_key!>
          enabled: true
      route_registrar:
        routes:
        - name: autoscaler_scheduler_health
          port: 6202
          registration_interval: 20s
          tags:
            component: autoscaler_scheduler_health
          uris:
          - app-autoscaler-scheduler.sys.test.cf.domain
    release: routing
  name: scheduler
  networks:
  - name: test-core-network
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  instances: 1
  jobs:
  - name: operator
    properties:
      autoscaler:
        appmetrics_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
        appmetrics_db_connection_config:
          connection_max_lifetime: 60s
          max_idle_connections: 10
          max_open_connections: 100
        cf:
          api: https://api.sys.test.cf.domain
          client_id: app-autoscaler-client
          grant_type: client_credentials
          secret: app-autoscaler-secret
          skip_ssl_validation: "true"
        lock_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
        operator:
          enable_db_lock: true
          health:
            password: <!{credhub}:autoscaler_operator_health_password!>
            port: 6208
            username: operator
          logging:
            level: info
          scaling_engine:
            ca_cert: <!{credhub}:scalingengine_client_cert.ca!>
            client_cert: <!{credhub}:scalingengine_client_cert.certificate!>
            client_key: <!{credhub}:scalingengine_client_cert.private_key!>
            host: scalingengine.service.cf.internal
          scheduler:
            ca_cert: <!{credhub}:scheduler_client_cert.ca!>
            client_cert: <!{credhub}:scheduler_client_cert.certificate!>
            client_key: <!{credhub}:scheduler_client_cert.private_key!>
            host: autoscalerscheduler.service.cf.internal
        policy_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
        policy_db_connection_config:
          connection_max_lifetime: 60s
          max_idle_connections: 10
          max_open_connections: 100
        scalingengine_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
        scalingengine_db_connection_config:
          connection_max_lifetime: 60s
          max_idle_connections: 10
          max_open_connections: 100
        scheduler.host: autoscalerscheduler.service.cf.internal
    release: app-autoscaler
  - consumes:
      nats-tls:
        deployment: base-test-cf
        from: nats-tls
    name: route_registrar
    properties:
      nats:
        tls:
          client_cert: <!{credhub}:nats_client_cert.certificate!>
          client_key: <!{credhub}:nats_client_cert.private_key!>
          enabled: true
      route_registrar:
        routes:
        - name: autoscaler_operator_health
          port: 6208
          registration_interval: 20s
          tags:
            component: autoscaler_operator_health
          uris:
          - app-autoscaler-operator.sys.test.cf.domain
    release: routing
  name: operator
  networks:
  - name: test-core-network
  stemcell: default
  update:
    serial: true
  vm_type: minimal
- azs:
  - z1
  instances: 1
  jobs:
  - name: eventgenerator
    properties:
      autoscaler:
        appmetrics_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
        appmetrics_db_connection_config:
          connection_max_lifetime: 60s
          max_idle_connections: 10
          max_open_connections: 100
        eventgenerator:
          ca_cert: <!{credhub}:eventgenerator_server_cert.ca!>
          enable_db_lock: false
          health:
            password: <!{credhub}:autoscaler_eventgenerator_health_password!>
            port: 6205
            username: eventgenerator
          logging:
            level: info
          metricscollector:
            ca_cert: <!{credhub}:log_cache_ca.certificate!>
            client_cert: <!{credhub}:log_cache_client_cert.certificate!>
            client_key: <!{credhub}:log_cache_client_cert.private_key!>
            host: logcache
            port: 8080
          scaling_engine:
            ca_cert: <!{credhub}:scalingengine_client_cert.ca!>
            client_cert: <!{credhub}:scalingengine_client_cert.certificate!>
            client_key: <!{credhub}:scalingengine_client_cert.private_key!>
            host: scalingengine.service.cf.internal
          server_cert: <!{credhub}:eventgenerator_server_cert.certificate!>
          server_key: <!{credhub}:eventgenerator_server_cert.private_key!>
        lock_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
        policy_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
        policy_db_connection_config:
          connection_max_lifetime: 60s
          max_idle_connections: 10
          max_open_connections: 100
    release: app-autoscaler
  - consumes:
      nats-tls:
        deployment: base-test-cf
        from: nats-tls
    name: route_registrar
    properties:
      nats:
        tls:
          client_cert: <!{credhub}:nats_client_cert.certificate!>
          client_key: <!{credhub}:nats_client_cert.private_key!>
          enabled: true
      route_registrar:
        routes:
        - name: autoscaler_eventgenerator_health
          port: 6205
          registration_interval: 20s
          tags:
            component: autoscaler_eventgenerator_health
          uris:
          - app-autoscaler-eventgenerator.sys.test.cf.domain
    release: routing
  name: eventgenerator
  networks:
  - name: test-core-network
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  instances: 1
  jobs:
  - name: metricsforwarder
    properties:
      autoscaler:
        metricsforwarder:
          health:
            password: <!{credhub}:autoscaler_metricsforwarder_health_password!>
            port: 6403
            username: metricsforwarder
          logging:
            level: info
          loggregator:
            tls:
              ca_cert: <!{credhub}:metricsforwarder_autoscaler_metricsforwarder_loggregator_tls.ca!>
              cert: <!{credhub}:metricsforwarder_autoscaler_metricsforwarder_loggregator_tls.certificate!>
              key: <!{credhub}:metricsforwarder_autoscaler_metricsforwarder_loggregator_tls.private_key!>
          metricshandler:
            tls:
              ca_cert: <!{credhub}:diego_instance_identity_ca.certificate!>
          server:
            port: 6201
        policy_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
        policy_db_connection_config:
          connection_max_lifetime: 60s
          max_idle_connections: 10
          max_open_connections: 100
        storedprocedure_db:
          address: autoscalerpostgres.service.cf.internal
          connection_config:
            connection_max_lifetime: 60s
            max_idle_connections: 10
            max_open_connections: 100
          databases:
          - name: autoscaler
            tag: default
          db_scheme: postgres
          port: 5432
          roles:
          - name: postgres
            password: <!{credhub}:database_password!>
            tag: default
          sslmode: verify-full
          tls:
            ca: <!{credhub}:postgres_ca.ca!>
            certificate: <!{credhub}:postgres_server.certificate!>
            private_key: <!{credhub}:postgres_server.private_key!>
    release: app-autoscaler
  - name: loggr-syslog-agent
    properties:
      cache:
        tls:
          ca_cert: <!{credhub}:loggr_syslog_agent_cache_tls.ca!>
          cert: <!{credhub}:loggr_syslog_agent_cache_tls.certificate!>
          cn: loggr_syslog_binding_cache
          key: <!{credhub}:loggr_syslog_agent_cache_tls.private_key!>
      metrics:
        ca_cert: <!{credhub}:loggr_syslog_agent_metrics.ca!>
        cert: <!{credhub}:loggr_syslog_agent_metrics.certificate!>
        key: <!{credhub}:loggr_syslog_agent_metrics.private_key!>
        server_name: metrics.config.is.required.by.job.specification.but.not.needed.in.our.case
      tls:
        ca_cert: <!{credhub}:loggr_syslog_agent_tls.ca!>
        cert: <!{credhub}:loggr_syslog_agent_tls.certificate!>
        key: <!{credhub}:loggr_syslog_agent_tls.private_key!>
    release: loggregator-agent
  - consumes:
      cloud_controller:
        deployment: base-test-cf
        from: cloud_controller
    name: loggr-syslog-binding-cache
    properties:
      aggregate_drains:
      - ca: <!{credhub}:log_cache_syslog_tls_ca.certificate!>
        cert: <!{credhub}:syslog_agent_log_cache_tls.certificate!>
        key: <!{credhub}:syslog_agent_log_cache_tls.private_key!>
        url: syslog-tls://log-cache.service.cf.internal:6067?include-metrics-deprecated=true&ssl-strict-internal=true
      api:
        polling_interval: 876000h
        tls:
          ca_cert: <!{credhub}:loggr_syslog_binding_cache_api_tls.ca!>
          cert: <!{credhub}:loggr_syslog_binding_cache_api_tls.certificate!>
          cn: api.tls.config.is.required.by.job.specification.but.not.needed.in.our.case
          key: <!{credhub}:loggr_syslog_binding_cache_api_tls.private_key!>
      external_port: 9000
      metrics:
        ca_cert: <!{credhub}:loggr_syslog_binding_cache_metrics.ca!>
        cert: <!{credhub}:loggr_syslog_binding_cache_metrics.certificate!>
        key: <!{credhub}:loggr_syslog_binding_cache_metrics.private_key!>
        server_name: metrics.config.is.required.by.job.specification.but.not.needed.in.our.case
      tls:
        ca_cert: <!{credhub}:loggr_syslog_binding_cache_tls.ca!>
        cert: <!{credhub}:loggr_syslog_binding_cache_tls.certificate!>
        cn: loggr_syslog_agent_tls
        key: <!{credhub}:loggr_syslog_binding_cache_tls.private_key!>
    release: loggregator-agent
  - consumes:
      nats-tls:
        deployment: base-test-cf
        from: nats-tls
    name: route_registrar
    properties:
      nats:
        tls:
          client_cert: <!{credhub}:nats_client_cert.certificate!>
          client_key: <!{credhub}:nats_client_cert.private_key!>
          enabled: true
      route_registrar:
        routes:
        - name: autoscaler_metrics_forwarder
          port: 6201
          registration_interval: 20s
          tags:
            component: autoscaler_metrics_forwarder
          uris:
          - autoscalermetrics.sys.test.cf.domain
        - name: autoscaler_metrics_forwarder_mtls
          port: 6201
          registration_interval: 20s
          tags:
            component: autoscaler_metrics_forwarder_mtls
          uris:
          - autoscaler-metricsforwarder-mtls.sys.test.cf.domain
        - name: autoscaler_metricsforwarder_health
          port: 6201
          registration_interval: 20s
          tags:
            component: autoscaler_metricsforwarder_health
          uris:
          - app-autoscaler-metricsforwarder.sys.test.cf.domain
    release: routing
  name: metricsforwarder
  networks:
  - name: test-core-network
  stemcell: default
  vm_type: minimal
name: base-cf-app-autoscaler
public_domains:
  metricsforwarder: base-cf-app-autoscalermetrics.sys.test.cf.domain
  metricsforwarder_mtls: base-cf-app-autoscaler-metricsforwarder-mtls.sys.test.cf.domain
  servicebroker: base-cf-app-autoscalerservicebroker.sys.test.cf.domain
releases:
- name: app-autoscaler
  sha1: 26865030c459bc048739c60d3d3a1874e6bbad85
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/app-autoscaler-release?v=14.1.0
  version: 14.1.0
- name: postgres
  sha1: sha256:75ceb40c970c54a922768d499bee9102d7a2ae2f88e269cefecba2f1c195e70b
  url: https://bosh.io/d/github.com/cloudfoundry/postgres-release?v=48
  version: "48"
- name: bosh-dns-aliases
  sha1: 55b3dced813ff9ed92a05cda02156e4b5604b273
  url: https://bosh.io/d/github.com/cloudfoundry/bosh-dns-aliases-release?v=0.0.4
  version: 0.0.4
- name: routing
  sha1: 6dd63d1653bf333ea64fca061a3a16d9be2e750f
  url: https://bosh.io/d/github.com/cloudfoundry/routing-release?v=0.275.0
  version: 0.275.0
- name: loggregator-agent
  sha1: 623e45f6c19a68d01c313a9a1a504dabc39ac1cf
  url: https://bosh.io/d/github.com/cloudfoundry/loggregator-agent-release?v=7.2.1
  version: 7.2.1
- name: bpm
  sha1: 36299a55c00d28cfe54bbb4772ca617f52d76adb
  url: https://bosh.io/d/github.com/cloudfoundry/bpm-release?v=1.2.1
  version: 1.2.1
stemcells:
- alias: default
  os: ubuntu-jammy
  version: latest
update:
  canaries: 1
  canary_watch_time: 1000-300000
  max_in_flight: 3
  serial: true
  update_watch_time: 1000-300000
variables: []
