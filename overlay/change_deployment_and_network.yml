---
addons:
- name: bosh-dns-aliases
  jobs:
  - name: bosh-dns-aliases
    properties:
      aliases:
      - (( merge on domain ))
      - domain: reverse-log-proxy.service.cf.internal
        targets:
        - (( merge on query ))
        - query: "*"
          deployment: (( grab meta.cf.deployment_name ))
          network: (( grab params.cf_core_network ))
          instance_group: log-api
      - domain: autoscalerpostgres.service.cf.internal
        targets:
        - (( merge on query ))
        - query: '*'
          instance_group: postgres_autoscaler
          deployment: ((deployment_name))
          network: (( grab params.network ))
      - domain: autoscaler.service.cf.internal
        targets:
        - (( merge on query ))
        - query: '*'
          instance_group: apiserver
          deployment: ((deployment_name))
          network: (( grab params.network ))
      - domain: autoscalerscheduler.service.cf.internal
        targets:
        - (( merge on query ))
        - query: '*'
          instance_group: scheduler
          deployment: ((deployment_name))
          network: (( grab params.network ))
      - domain: servicebroker.service.cf.internal
        targets:
        - (( merge on query ))
        - query: '*'
          deployment: ((deployment_name))
          network: (( grab params.network ))
          instance_group: apiserver
      - domain: eventgenerator.service.cf.internal
        targets:
        - (( merge on query ))
        - query: '*'
          deployment: ((deployment_name))
          network: (( grab params.network ))
          instance_group: eventgenerator
      - domain: scalingengine.service.cf.internal
        targets:
        - (( merge on query ))
        - query: '*'
          deployment: ((deployment_name))
          network: (( grab params.network ))
          instance_group: scalingengine
      - domain: metricsgateway.service.cf.internal
        targets:
        - (( merge on query ))
        - query: '*'
          deployment: ((deployment_name))
          network: (( grab params.network ))
          instance_group: metricsforwarder
      - domain: metricsserver.service.cf.internal
        targets:
        - (( merge on query ))
        - query: '*'
          deployment: ((deployment_name))
          network: (( grab params.network ))
          instance_group: metricsforwarder
      - domain: nats.service.cf.internal
        targets:
        - (( merge on query ))
        - query: '*'
          deployment: (( grab meta.cf.deployment_name ))
          network: (( grab params.cf_core_network ))
          instance_group: nats
      - domain: _.nats.service.cf.internal
        targets:
        - (( merge on query ))
        - query: '_'
          deployment: (( grab meta.cf.deployment_name ))
          network: (( grab params.cf_core_network ))
          instance_group: nats
      - domain: logcache
        targets:
        - (( merge on query ))
        - query: '*'
          deployment: (( grab meta.cf.deployment_name ))
          network: (( grab params.cf_core_network ))
          instance_group: log-cache
      - domain: log-cache.service.cf.internal
        targets:
        - (( merge on query ))
        - query: '*'
          deployment: (( grab meta.cf.deployment_name ))
          network: (( grab params.cf_core_network ))
          instance_group: log-cache

instance_groups:
- name: postgres_autoscaler
  networks:
  - (( replace ))
  - name: (( grab params.network ))

- name: scalingengine
  networks:
  - (( replace ))
  - name: (( grab params.network ))
  jobs:
  - name: route_registrar
    consumes:
      nats:
        from: nats
        deployment: (( grab meta.cf.deployment_name ))

- name: apiserver
  networks:
  - (( replace ))
  - name: (( grab params.network ))
  jobs:
  - name: route_registrar
    consumes:
      nats:
        from: nats
        deployment: (( grab meta.cf.deployment_name ))
  - name: golangapiserver
    release: app-autoscaler
    properties:
      autoscaler:
        apiserver:
          broker:
            broker_credentials:
              - (( replace ))
              - broker_username: 'autoscaler_service_broker_user'
                broker_password: ((autoscaler_service_broker_password))


- name: scheduler
  networks:
  - (( replace ))
  - name: (( grab params.network ))
  jobs:
  - name: route_registrar
    consumes:
      nats:
        from: nats
        deployment: (( grab meta.cf.deployment_name ))

- name: operator
  networks:
  - (( replace ))
  - name: (( grab params.network ))
  jobs:
  - name: route_registrar
    consumes:
      nats:
        from: nats
        deployment: (( grab meta.cf.deployment_name ))

- name: eventgenerator
  networks:
  - (( replace ))
  - name: (( grab params.network ))
  jobs:
  - name: eventgenerator
    properties:
      autoscaler:
        eventgenerator:
          metricscollector:
            ca_cert: ((metricscollector_ca_cert.ca))
            client_cert: ((metricscollector_client.certificate))
            client_key: ((metricscollector_client.private_key))

  - name: route_registrar
    consumes:
      nats:
        from: nats
        deployment: (( grab meta.cf.deployment_name ))

- name: metricsforwarder
  networks:
  - (( replace ))
  - name: (( grab params.network ))
  jobs:
  - name: route_registrar
    properties:
      route_registrar:
        routes:
        - name: autoscaler_metrics_forwarder_mtls
          registration_interval: 20s
          port: (( grab instance_groups.metricsforwarder.jobs.metricsforwarder.properties.autoscaler.metricsforwarder.server.port ))

    consumes:
      nats:
        from: nats
        deployment: (( grab meta.cf.deployment_name ))

  - name: loggr-syslog-binding-cache
    consumes:
      cloud_controller: { from: cloud_controller, deployment: (( grab meta.cf.deployment_name )) }
    properties:
      aggregate_drains:
      - ca: ((log_cache_syslog_tls_ca.certificate))
        cert: ((syslog_agent_log_cache_tls.certificate))
        key: ((syslog_agent_log_cache_tls.private_key))
        url: syslog-tls://log-cache.service.cf.internal:6067?include-metrics-deprecated=true&ssl-strict-internal=true

variables:
- name: metricscollector_ca
  type: certificate
  options:
    is_ca: true
    common_name: metricscollectorCA

- name: metricscollector_server
  type: certificate
  options:
    ca: metricscollector_ca
    common_name: metricscollector_server
    alternative_names:
    - "*.metricscollector.service.cf.internal"
    extended_key_usage:
    - server_auth

- name: metricscollector_client
  type: certificate
  options:
    ca: metricscollector_ca
    common_name: metricscollector_client
    extended_key_usage:
    - client_auth

- name: log_cache_syslog_tls_ca
  type: certificate
  options:
    is_ca: true
    common_name: log_cache_syslog_tls_ca

- name: syslog_agent_log_cache_tls
  type: certificate
  options:
    ca: log_cache_syslog_tls_ca
    common_name: syslog_agent_log_cache
    extended_key_usage:
    - client_auth
    - server_auth

- name: loggregator_ca
  type: certificate
  options:
    is_ca: true
    common_name: loggregatorCA

- name: loggregator_tls_agent
  type: certificate
  options:
    ca: loggregator_ca
    common_name: loggregator_agent
    extended_key_usage:
    - client_auth
    - server_auth

- name: autoscaler_service_broker_password
  type: password