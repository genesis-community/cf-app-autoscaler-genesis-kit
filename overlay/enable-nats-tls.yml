---

instance_groups:
- name: scalingengine
  jobs:
  - name: route_registrar
    properties:
      nats:
        tls:
          enabled: true
          client_cert: (( vault meta.cf.exodus ":nats_client_cert" ))
          client_key: (( vault meta.cf.exodus ":nats_client_key" ))
    consumes:
      nats: (( prune ))
      nats-tls:
        from: nats-tls
        deployment: (( grab meta.cf.deployment_name ))

- name: metricsforwarder
  jobs:
  - name: route_registrar
    properties:
      nats:
        tls:
          enabled: true
          client_cert: (( vault meta.cf.exodus ":nats_client_cert" ))
          client_key: (( vault meta.cf.exodus ":nats_client_key" ))
    consumes:
      nats: (( prune ))
      nats-tls:
        from: nats-tls
        deployment: (( grab meta.cf.deployment_name ))

- name: scheduler
  jobs:
  - name: route_registrar
    properties:
      nats:
        tls:
          enabled: true
          client_cert: (( vault meta.cf.exodus ":nats_client_cert" ))
          client_key: (( vault meta.cf.exodus ":nats_client_key" ))
    consumes:
      nats: (( prune ))
      nats-tls:
        from: nats-tls
        deployment: (( grab meta.cf.deployment_name ))

- name: operator
  jobs:
  - name: route_registrar
    properties:
      nats:
        tls:
          enabled: true
          client_cert: (( vault meta.cf.exodus ":nats_client_cert" ))
          client_key: (( vault meta.cf.exodus ":nats_client_key" ))
    consumes:
      nats: (( prune ))
      nats-tls:
        from: nats-tls
        deployment: (( grab meta.cf.deployment_name ))

- name: apiserver
  jobs:
  - name: route_registrar
    properties:
      nats:
        tls:
          enabled: true
          client_cert: (( vault meta.cf.exodus ":nats_client_cert" ))
          client_key: (( vault meta.cf.exodus ":nats_client_key" ))
    consumes:
      nats: (( prune ))
      nats-tls:
        from: nats-tls
        deployment: (( grab meta.cf.deployment_name ))

- name: eventgenerator
  jobs:
  - name: route_registrar
    properties:
      nats:
        tls:
          enabled: true
          client_cert: (( vault meta.cf.exodus ":nats_client_cert" ))
          client_key: (( vault meta.cf.exodus ":nats_client_key" ))
    consumes:
      nats: (( prune ))
      nats-tls:
        from: nats-tls
        deployment: (( grab meta.cf.deployment_name ))
