#!/bin/bash

package="app-autoscaler-release"
github_org="cloudfoundry"
boshio_org="cloudfoundry-incubator"

error() {
  echo "[1;31m[ERROR][0m $1"
  exit 1
}

# Check if version specified
version="${1:-}"
[[ -n "$version" ]] || error "Usage: $0 <version>"

set -ue
# go to base directory
basepath="$( cd "$(dirname "$0")/../" >/dev/null 2>&1 ; pwd -P )"
cd "$basepath"
[[ -d "upstream" ]] || error "Could not find upstream directory under base path $basepath"

workdir=$(mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir')
[[ -n "$workdir" ]] && [[ -d "$workdir" ]] || error "Failed to make work directory"

file="$workdir/${package}-${version}.tar.gz"
echo "Fetching ${package} v${version} release from ${github_org} Github organization}"

curl -sSL -o "$file"\
  "https://github.com/${github_org}/${package}/archive/refs/tags/v${version}.tar.gz" > /dev/null
if ! [[ -f "$file" ]] ; then
  error "Failed to download ${package} v${version} -- cannot continue"
fi
topdir="$(tar -ztf "$file" | awk '{print $NF}' | cut -d'/' -f1 | uniq)"
if [[ $topdir != "${package}-${version}" ]] ; then
  error "Downloaded ${package} v${version} doesn't look like a valid release  -- cannot continue"
fi

pushd "$workdir"
tar -zxf "$file" || error "Unable to extract repository"
popd

rm -rf upstream
mkdir -p upstream/operations
mkdir -p upstream/templates

src="$workdir/${package}-${version}"
cp "$src"/templates/*.yml upstream/templates/
cp "$src"/operations/*.yml upstream/operations/

# Get rid of v1 cruft
find upstream -name '*-v1.yml' -exec rm {} \;

ts="$(date -u +"%Y-%b-%d %H:%M:%S %Z")"
cat > overlay/upstream_version.yml <<EOF
exodus:
  ${package}-version: $version
  ${package}-date:    $ts
EOF
url="https://bosh.io/d/github.com/${boshio_org}/${package}?v=$version"
sha1="$(curl -sSL "https://bosh.io/releases/github.com/${boshio_org}/${package}?version=$version" 2>/dev/null | grep 'sha1:' | sed -e 's/.*"\([0-9a-f]*\)".*/\1/')"
if [[ "$sha1" =~ ^[0-9a-f]+$ ]] ; then
  cat > "overlay/releases.yml" <<EOF
---
releases:
- name:    "${package%-release}"
  version: "$version"
  url:     "$url"
  sha1:    "$sha1"
EOF
else
  cat >&2 <<EOF
Could not programatically determine release details.  Please navigate to
https://bosh.io/releases/github.com/${boshio_org}/${package}?version=$version"
and update overlay/releases.yml to target release $version.
EOF
fi

rm -rf "$workdir"
