#!/bin/bash

set -u

# Version check
min_version="2.7.0"
genesis_version="$(genesis -v 2>&1 | grep '^Genesis v' | sed -e 's/Genesis v\(.*\) (.*$/\1/')"
if ! [[ "$genesis_version" =~ -dev$ ]] && ! new_enough "$genesis_version" "$min_version" ; then
  describe >&2 "" "#R{[ERROR]} This kit needs Genesis $min_version.  Please upgrade before continuing" ""
  exit 1
fi
set -e

cc_ok=yes
# Cloud Config checks
if [[ -n "$GENESIS_CLOUD_CONFIG" ]] ; then
  if want_feature ocfp ; then
    _env_scale="$(lookup --partial meta.ocfp.env.scale)"
    jobs=( as-actors as-api as-metrics as-nozzle )
    for job in ${jobs[@]} ; do
      _vm_type="${job}-${_env_scale}"
      _disk_type="${job}-${_env_scale}"
      _network="${GENESIS_ENVIRONMENT}-ocf"

      cloud_config_needs vm_type   "$(lookup params.vm_type   ${_vm_type})"
      cloud_config_needs network   "$(lookup params.network   ${_network})"
      cloud_config_needs disk_type "$(lookup params.disk_pool ${_disk_type})"
    done
  else # Legacy was hard coded
    for t in minimal small; do
      cloud_config_needs vm_type "$t"
    done
  fi

  # Check if there were any errors reported from the above checks.
  if check_cloud_config ; then
    describe "  cloud config [#G{OK}]"
  else
    describe "  cloud config [#R{FAILED}]"
    cc_ok=no
  fi
fi

# Runtime config checks
runtime_ok=yes

# Check for BOSH DNS
if ! rcq -e '.addons[] | .name | select(. == "bosh-dns")' &>/dev/null; then
  runtime_ok=no
  describe >&2 \
    "  #R{Errors were found} in your runtime-config:" \
    "    - #R{BOSH DNS is not in the runtime-config, which is required. Refer to}" \
    "      #R{'genesis man $GENESIS_ENVIRONMENT' for more info.}" ""
fi

# Check if there were any errors reported from runtime config checks
if [[ "$runtime_ok" == "yes" ]]; then
  describe "  runtime config [#G{OK}]"
else
  describe "  runtime config [#R{FAILED}]"
fi

env_ok=yes
# Environment Parameter checks - none yet!

if [[ "$env_ok" == "yes" ]]; then
  describe "  environment files [#G{OK}]"
else
  describe "  environment files [#R{FAILED}]"
fi

if [[ "$env_ok" == "no" || "$cc_ok" == "no" || "$runtime_ok" == no ]] ; then
  exit 1
fi


